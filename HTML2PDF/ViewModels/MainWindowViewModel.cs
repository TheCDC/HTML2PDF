using Autofac;
using HTML2PDF.Models;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.Windows.Input;

namespace HTML2PDF.ViewModels
{
    internal class MainWindowViewModel : ViewModelBase, INotifyPropertyChanged
    {
        private PdfConverterViewModel _CurrentViewModel;

        private string _LoadingStatusLabel;

        private ICommand _NewJobCommand;

        public MainWindowViewModel()
        {
            ListConversionStatusUpdates = new ObservableCollection<string>();
            Container = GetContainer();
            CurrentViewModel = Container.Resolve<PdfConverterViewModel>();
        }

        public PdfConverterViewModel CurrentViewModel
        {
            get => _CurrentViewModel; set
            {
                _CurrentViewModel = value;
                NotifyPropertyChanged();
            }
        }

        /// <summary>
        /// User-facing status message
        /// </summary>
        public string ErrorStatusLabel { get => _LoadingStatusLabel; set { _LoadingStatusLabel = value; NotifyPropertyChanged(); } }

        /// <summary>
        /// List of status messages generated by conversion process.
        /// </summary>
        public ObservableCollection<string> ListConversionStatusUpdates { get; set; } = new ObservableCollection<string>();

        public ICommand NewJobCommand => _NewJobCommand ?? (_NewJobCommand = new RelayCommand.RelayCommand(DoNewJob));

        private static Autofac.IContainer Container
        { get; set; }

        public static Autofac.IContainer GetContainer()
        {
            var builder = new ContainerBuilder();
            builder.RegisterType<HTMLtoPDFService>().As<IPdfConverterService>();
            builder.RegisterType<PdfConverterViewModel>();
            return builder.Build();
        }

        public void DoNewJob()
        {
            CurrentViewModel = Container.Resolve<PdfConverterViewModel>();
        }
    }
}